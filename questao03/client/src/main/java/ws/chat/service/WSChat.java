
package ws.chat.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import ws.message.service.Message;
import ws.user.service.User;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSChat", targetNamespace = "http://service.chat.ws/")
@XmlSeeAlso({
    ws.chat.service.ObjectFactory.class,
    ws.message.service.ObjectFactory.class,
    ws.user.service.ObjectFactory.class
})
public interface WSChat {


    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://service.chat.ws/", className = "ws.chat.service.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://service.chat.ws/", className = "ws.chat.service.LoginResponse")
    @Action(input = "http://service.chat.ws/WSChat/loginRequest", output = "http://service.chat.ws/WSChat/loginResponse")
    public boolean login(
        @WebParam(name = "arg0", targetNamespace = "")
        User arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "logout", targetNamespace = "http://service.chat.ws/", className = "ws.chat.service.Logout")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "http://service.chat.ws/", className = "ws.chat.service.LogoutResponse")
    @Action(input = "http://service.chat.ws/WSChat/logoutRequest", output = "http://service.chat.ws/WSChat/logoutResponse")
    public boolean logout(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<ws.user.service.User>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listUsers", targetNamespace = "http://service.chat.ws/", className = "ws.chat.service.ListUsers")
    @ResponseWrapper(localName = "listUsersResponse", targetNamespace = "http://service.chat.ws/", className = "ws.chat.service.ListUsersResponse")
    @Action(input = "http://service.chat.ws/WSChat/listUsersRequest", output = "http://service.chat.ws/WSChat/listUsersResponse")
    public List<User> listUsers();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendMessage", targetNamespace = "http://service.chat.ws/", className = "ws.chat.service.SendMessage")
    @ResponseWrapper(localName = "sendMessageResponse", targetNamespace = "http://service.chat.ws/", className = "ws.chat.service.SendMessageResponse")
    @Action(input = "http://service.chat.ws/WSChat/sendMessageRequest", output = "http://service.chat.ws/WSChat/sendMessageResponse")
    public boolean sendMessage(
        @WebParam(name = "arg0", targetNamespace = "")
        Message arg0);

    /**
     * 
     * @return
     *     returns java.util.List<ws.message.service.Message>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listMessages", targetNamespace = "http://service.chat.ws/", className = "ws.chat.service.ListMessages")
    @ResponseWrapper(localName = "listMessagesResponse", targetNamespace = "http://service.chat.ws/", className = "ws.chat.service.ListMessagesResponse")
    @Action(input = "http://service.chat.ws/WSChat/listMessagesRequest", output = "http://service.chat.ws/WSChat/listMessagesResponse")
    public List<Message> listMessages();

}
